[tool.poetry]
name = "strawberry-django-plus"
version = "0.3.2"
description = "Enhanced Strawberry GraphQL integration with Django"
authors = ["Thiago Bellini Ribeiro <thiago@bellini.dev>"]
license = "MIT"
readme = "README.md"
homepage = "https://github.com/blb-ventures/strawberry-django-plus"
repository = "https://github.com/blb-ventures/strawberry-django-plus"
documentation = "https://strawberry-django-plus.readthedocs.io"
keywords = ["strawberry", "django", "graphql", "relay", "optimizer"]
classifiers = [
  "Development Status :: 5 - Production/Stable",
  "Environment :: Web Environment",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: MIT License",
  "Operating System :: OS Independent",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Framework :: Django",
  "Framework :: Django :: 3.2",
  "Framework :: Django :: 4.0",
]
packages = [{ include = "strawberry_django_plus" }]

[tool.poetry.dependencies]
python = "^3.8"
django = ">= 3.2"
strawberry-graphql = ">= 0.93.4"
strawberry-graphql-django = ">= 0.2.5"
typing-extensions = ">= 4.0.1"

[tool.poetry.dev-dependencies]
black = "^21.6b"
codecov = "^2.1.11"
django-types = "^0.12.0"
flake8 = "^4.0.1"
flake8-broken-line = "^0.4.0"
flake8-bugbear = "^21.4.3"
flake8-builtins = "^1.5.3"
flake8-comprehensions = "^3.5.0"
flake8-polyfill = "^1.0.2"
flake8-return = "^1.1.3"
flake8-simplify = "^0.14.1"
isort = "^5.9.2"
pytest = "^6.2.3"
pytest-cov = "^3.0.0"
pytest-django = "^4.2.0"
django-extensions = "^3.1.5"
ipython = "^7.31.1"
factory-boy = "^3.2.1"
pytest-asyncio = "^0.16.0"
django-debug-toolbar = "^3.2.4"
django-choices-field = "^2.0"

[tool.black]
line-length = 100
target-version = ['py38', 'py39', 'py310']
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | __pycached__
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
force_sort_within_sections = true

[tool.pyright]
pythonVersion = "3.8"
useLibraryCodeForTypes = true
reportUnnecessaryTypeIgnoreComment = "warning"
reportUnnecessaryCast = "warning"
reportCallInDefaultInitializer = "warning"
reportOverlappingOverload = "warning"
reportUninitializedInstanceVariable = "warning"
reportUntypedNamedTuple = "error"
reportMissingSuperCall = "warning"
strictListInference = "error"
strictDictionaryInference = "error"
strictSetInference = "error"

[tool.pytest.ini_options]
DJANGO_SETTINGS_MODULE = "tests.settings"
python_files = "tests/test_*.py"
addopts = "-p no:warnings --nomigrations --cov=./ --cov-report term-missing:skip-covered"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
